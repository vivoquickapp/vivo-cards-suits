<template>
  <div class="button-wrap">
    <list class="button-row" show="{{layout==='row'}}">
      <list-item
        class="button-row-item {{$idx==0?'margin-left-40':'margin-left-32'}} {{$idx+1==buttonList.length?'margin-right-40':''}}"
        type="list-item"
        for="{{buttonList.slice(0,10)}}"
      >
        <text class="button" onclick="handleClickBtn($idx)">{{ $item }}</text>
      </list-item>
    </list>
    <div class="button-column" show="{{layout==='column'}}">
      <div
        class="button-column-item 
                    {{buttonRowIndex>0?'margin-top-32':''}} 
                    {{buttonRowArr.length==3?'padding-left-right-24':''}} 
                    {{buttonRowArr.length==2?'padding-left-right-56':''}}"
        for="{{(buttonRowIndex, buttonRowArr) in columnArr}}"
      >
        <div class="button-wrap" for="{{buttonRowArr}}">
          <text class="button" onclick="handleClickBtn($idx,buttonRowIndex)">{{
            $item
          }}</text>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
export default {
  props: {
    layout: {
      default: "row"
    },
    buttonList: {
      default: []
    }
  },
  data() {
    return {};
  },
  computed: {
    columnArr() {
      let buttonList = this.buttonList.slice(0, 6);
      let columnArr = [];

      switch (buttonList.length) {
        case 1:
        case 2:
        case 3:
          columnArr.push(buttonList);
          break;
        case 4:
          columnArr.push(buttonList.slice(0, 2));
          columnArr.push(buttonList.slice(2, 4));
          break;
        case 5:
          columnArr.push(buttonList.slice(0, 3));
          columnArr.push(buttonList.slice(3, 5));
          break;
        case 6:
          columnArr.push(buttonList.slice(0, 3));
          columnArr.push(buttonList.slice(3, 6));
          break;
      }

      return columnArr;
    }
  },
  handleClickBtn(index, buttonRowIndex) {
    if (this.layout == "column" && buttonRowIndex == 1) {
      index = this.columnArr[0].length + index;
    }

    this.$emit("clicked", { index, text: this.buttonList[index] });
  }
};
</script>

<style lang="less">
.margin-left-32 {
  margin-left: 32px;
}
.margin-left-40 {
  margin-left: 40px;
}
.margin-right-40 {
  margin-right: 40px;
}
.margin-top-32 {
  margin-top: 32px;
}
.padding-left-right-24 {
  padding: 0 24px;
}
.padding-left-right-56 {
  padding: 0 56px;
}

.button-wrap {
  width: 100%;
  background-color: #fff;
  .button-row {
    flex-direction: row;
    width: 100%;
    height: 104px;
    padding: 28px 0;
    &-item {
      width: 128px;
      height: 48px;
      .button {
        width: 100%;
        height: 100%;
        font-size: 24px;
        color: #456fff;
        text-align: center;
        background-color: #f8f8f8;
        border-radius: 26px;
      }
    }
  }
  .button-column {
    flex-direction: column;
    width: 100%;
    padding: 28px 0;
    &-item {
      justify-content: center;
      .button-wrap {
        flex: 1;
        justify-content: center;
        .button {
          width: 192px;
          height: 48px;
          font-size: 24px;
          color: #2a72ff;
          text-align: center;
          background-color: #f8f8f8;
          border-radius: 24px;
        }
      }
    }
  }
}
</style>
